# Copyright 2019 Google, LLC.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# push까지 성공
on:
  push:
    branches:
    - a

name: Cloud Run
env:
  INSTANCE: instance-1
  SERVICE_ACCOUT: yj-479@level-dragon-376304.iam.gserviceaccount.com
  PROJECT_ID: level-dragon-376304
  SERVICE: heyi-front
  REGION: asia-northeast3

jobs:
  deploy:
    runs-on: ubuntu-latest

    # Add "id-token" with the intended permissions.
    permissions:
      contents: 'read'
      id-token: 'write'

    steps:
    - name: Checkout
      uses: actions/checkout@v3
 
    # Configure Workload Identity Federation and generate an access token.
    - id: 'auth'
      name: 'Authenticate to Google Cloud'
      uses: 'google-github-actions/auth@v1'
      with:
        workload_identity_provider: 'projects/1055514527189/locations/global/workloadIdentityPools/heyi-pool/providers/my-provider'     # 'heyi-front/629298042516/asia-northeast3-a/global/workloadIdentityPools/my-pool/providers/my-provider' 'projects/123456789/locations/global/workloadIdentityPools/my-pool/providers/my-provider' 
        service_account: 'heyi-github-action@hey-i-375802.iam.gserviceaccount.com' #'my-service-account@my-project.iam.gserviceaccount.com'
        token_format: 'access_token'

    # # Alternative option - authentication via credentials json
    # - id: 'auth'
    #   uses: 'google-github-actions/auth@v1'
    #   with:
    #     credentials_json: '${{ secrets.SERVICE_ACCOUNT_KEY }}'

    # Setup gcloud CLI
    - name: Set up Cloud SDK
      uses: google-github-actions/setup-gcloud@v1

    - name: Authorize Docker push
      run: gcloud auth configure-docker

    - name: Build and Push Container
      run: |-
        docker build frontend --file frontend/Dockerfile --tag gcr.io/${{ env.PROJECT_ID }}/${{ env.SERVICE }}
        docker push gcr.io/${{ env.PROJECT_ID }}/${{ env.SERVICE }}
    # project 설정
    #- name: Set project
    #  run: |
    #    gcloud --quiet config set project ${{ env.PROJECT_ID }}
    #    gcloud --quiet config set compute/zone ${{ env.ZONE }}
    #    gcloud services enable heyi-front-server
      #gcloud services enable compute
      #gcloud services enable container

    - name: Deploy to Cloud Run
      run: |-
        gcloud run deploy ${{ env.SERVICE }} \
          --region ${{ env.REGION }} \
          --image gcr.io/${{ env.PROJECT_ID }}/${{ env.SERVICE }} \
          --platform "managed" \
          --quiet
    # - name: Deploy to Cloud Run
    #   id: deploy
    #   uses: go
    # ogle-github-actions/deploy-cloudrun@v0
    #   with:
    #     service: ${{ env.SERVICE }}
    #     region: ${{ env.REGION }}
    #     image: gcr.io/${{ env.PROJECT_ID }}/${{ env.SERVICE }}
        # NOTE: If using a pre-built image, update the image name here
        #image: ${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.SERVICE }}:${{ github.sha }}

    # If required, use the Cloud Run url output in later steps
    - name: Show Output
      run: echo ${{ steps.deploy.outputs.url }}
    
    # Deploy : update-container로 업데이트 요청
    #- name: Deploy
    #  run: |-
    #    gcloud compute instances update-container ${{ env.INSTANCE }} \
    #      --zone ${{ env.ZONE }} \
    #      --container-image gcr.io/${{ env.PROJECT_ID }}/${{ env.SERVICE }}



    #- name: Deploy to Cloud Run
    #  run: |-
    #    gcloud run deploy ${{ env.SERVICE }} \
    #      --region ${{ env.REGION }} \
    #      --image gcr.io/${{ env.PROJECT_ID }}/${{ env.SERVICE }} \
    #      --platform "managed" \
    #      --quiet